package p3;

import java.lang.reflect.InvocationTargetException;
import org.civet.Civet;
import org.civet.Civet.Compile;

public class Test3 {
    String prop;
    
    public Test3(String prop) {
        super();
        this.prop = prop;
    }
    
    void aMethod(Object o) {
        String propertyValue;
        try {
            propertyValue = (String)o.getClass().getMethod(prop).invoke(o);
            System.out.println(propertyValue);
        } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException | NoSuchMethodException | SecurityException e) {
            e.printStackTrace();
        }
    }
    
    @Compile()
    public static void main(String[] args) {
        p3.Test3.aMethod$1001(new String("Should be printed!"));
    }
    
    static void aMethod$1001(java.lang.Object o) {
        String propertyValue;
        try {
            propertyValue = (String)o.getClass().getMethod("toString").invoke(o);
            System.out.println(propertyValue);
        } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException | NoSuchMethodException | SecurityException e) {
            e.printStackTrace();
        }
    }
}