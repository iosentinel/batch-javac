package benchmark.arith_int;

public class Add extends Binary {
    
    Add(Exp l, Exp r) {
        super(l, r);
    }
    
    int eval(int[] env) {
        return left.eval(env) + right.eval(env);
    }
    
    static int eval$1006(int[] env) {
        return benchmark.arith_int.Var.eval$1007(env) + benchmark.arith_int.Constant.eval$1008(env);
    }
    
    static int eval$1012(int[] env) {
        return benchmark.arith_int.Var.eval$1013(env) + benchmark.arith_int.Var.eval$1014(env);
    }
    
    static int eval$1004(int[] env) {
        return benchmark.arith_int.Mul.eval$1005(env) + benchmark.arith_int.Neg.eval$1009(env);
    }
}