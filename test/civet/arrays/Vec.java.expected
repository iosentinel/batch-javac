package arrays;

import org.civet.Civet;
import org.civet.Civet.Compile;

public class Vec {
    double[] v;
    
    public Vec(double[] v) {
        super();
        this.v = v;
    }
    
    double get(int i) {
        return v[i];
    }
    
    void set(int i, double d) {
        v[i] = d;
    }
    
    int size() {
        return v.length;
    }
    
    public double dotP(Vec v2) {
        double res = 0.0;
        for (int i = Civet.CT(0, Civet.IsCT(this)); i < size(); i++) {
            res = res + get(i) * v2.get(i);
        }
        return res;
    }
    
    @Compile()
    public static void main(String[] args) {
        Vec v2 = new Vec(new double[]{0.6, 9.2, 4.0});
        double r = arrays.Vec.dotP$1001(v2);
        System.out.println(r);
    }
    
    double get$1002() {
        return v[0];
    }
    
    double get$1003() {
        return v[1];
    }
    
    double get$1004() {
        return v[2];
    }
    
    public static double dotP$1001(arrays.Vec v2) {
        double res = 0.0;
        {
            {
                res = res + 1.0 * v2.get$1002();
            }
            {
                res = res + 0.0 * v2.get$1003();
            }
            {
                res = res + 3.0 * v2.get$1004();
            }
        }
        return res;
    }
}